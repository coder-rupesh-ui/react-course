{"version":3,"sources":["components/Movie.js","components/MoviesList.js","components/AddMovie.js","App.js","index.js","components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css"],"names":["Movie","props","className","classes","movie","title","releaseDate","openingText","MovieList","movies","map","opening_crawl","episode_id","AddMovie","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","current","value","onAddMovie","control","htmlFor","type","id","ref","rows","App","useState","setMovies","isLoading","setIsLoading","error","setError","fetchMovies","useCallback","fetch","res","ok","Error","json","key","data","loadedMovies","push","message","method","body","JSON","stringify","headers","console","log","useEffect","Fragment","onClick","length","MoviesList","ReactDOM","createRoot","document","getElementById","render","module","exports"],"mappings":"oRAceA,EAVD,SAACC,GACb,OACE,qBAAIC,UAAWC,IAAQC,MAAvB,UACE,6BAAKH,EAAMI,QACX,6BAAKJ,EAAMK,cACX,4BAAIL,EAAMM,gBAGf,E,gBCQcC,EAfG,SAACP,GACjB,OACE,oBAAIC,UAAWC,IAAQ,eAAvB,SACGF,EAAMQ,OAAOC,KAAI,SAACN,GAAD,OAChB,cAAC,EAAD,CAEEC,MAAOD,EAAMC,MACbC,YAAaF,EAAME,YACnBC,YAAaH,EAAMO,eAHdP,EAAMQ,WAFG,KAUvB,E,wBCwBcC,MAtCf,SAAkBZ,GAChB,IAAMa,EAAWC,iBAAO,IAClBC,EAAiBD,iBAAO,IACxBE,EAAiBF,iBAAO,IAgB9B,OACE,uBAAMG,SAfR,SAAuBC,GACrBA,EAAMC,iBAIN,IAAMhB,EAAQ,CACZC,MAAOS,EAASO,QAAQC,MACxBf,YAAaS,EAAeK,QAAQC,MACpChB,YAAaW,EAAeI,QAAQC,OAGtCrB,EAAMsB,WAAWnB,EAClB,EAGC,UACE,sBAAKF,UAAWC,IAAQqB,QAAxB,UACE,uBAAOC,QAAQ,QAAf,mBACA,uBAAOC,KAAK,OAAOC,GAAG,QAAQC,IAAKd,OAErC,sBAAKZ,UAAWC,IAAQqB,QAAxB,UACE,uBAAOC,QAAQ,eAAf,0BACA,0BAAUI,KAAK,IAAIF,GAAG,eAAeC,IAAKZ,OAE5C,sBAAKd,UAAWC,IAAQqB,QAAxB,UACE,uBAAOC,QAAQ,OAAf,0BACA,uBAAOC,KAAK,OAAOC,GAAG,OAAOC,IAAKX,OAEpC,iDAGL,ECiCca,MAnEf,WACE,MAA4BC,mBAAS,IAArC,mBAAOtB,EAAP,KAAeuB,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAcC,sBAAW,gCAAC,2GAC9BJ,GAAa,GACbE,EAAS,MAFqB,kBAMVG,MAAM,oEANI,WAMtBC,EANsB,QAOnBC,GAPmB,sBAQpB,IAAIC,MAAM,wBARU,wBAUTF,EAAIG,OAVK,QAY5B,IAAQC,KAFFC,EAVsB,OAWtBC,EAAe,GACND,EACbC,EAAaC,KAAK,CAChBnC,WAAYgC,EACZvC,MAAOwC,EAAKD,GAAKvC,MACjBC,YAAauC,EAAKD,GAAKtC,YACvBK,cAAekC,EAAKD,GAAKrC,cAG7ByB,EAAUc,GApBkB,kDAsB5BV,EAAS,KAAIY,SAtBe,QAyB9Bd,GAAa,GAzBiB,0DA0B7B,IA/BU,sDAqCb,WAA+B9B,GAA/B,mGACoBmC,MAAM,mEAAoE,CAC1FU,OAAQ,OACRC,KAAMC,KAAKC,UAAUhD,GACrBiD,QAAS,CACP,eAAgB,sBALtB,OACQb,EADR,OAQQK,EAAOL,EAAIG,OACjBW,QAAQC,IAAIV,GATd,4CArCa,sBAiDb,OAhBAW,qBAAU,WACRnB,GACD,GAAE,CAACA,IAeF,eAAC,IAAMoB,SAAP,WACE,kCACE,cAAC,EAAD,CAAUlC,WApDH,gDAsDT,kCACE,wBAAQmC,QAASrB,EAAjB,4BAEF,qCACIJ,GAAaxB,EAAOkD,OAAS,GAAK,cAACC,EAAD,CAAYnD,OAAQA,KACtDwB,GAA+B,IAAlBxB,EAAOkD,SAAiBxB,GAAS,oDAC9CF,GAAaE,GAAS,4BAAIA,IAC3BF,GAAa,gDAIrB,ECjEY4B,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,I,oBCNZC,EAAOC,QAAU,CAAC,QAAU,0B,oBCA5BD,EAAOC,QAAU,CAAC,MAAQ,qB,oBCA1BD,EAAOC,QAAU,CAAC,cAAc,gC","file":"static/js/main.07c47b55.chunk.js","sourcesContent":["import React from 'react';\n\nimport classes from './Movie.module.css';\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from 'react';\n\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\n\nconst MovieList = (props) => {\n  return (\n    <ul className={classes['movies-list']}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.episode_id}\n          title={movie.title}\n          releaseDate={movie.releaseDate}\n          openingText={movie.opening_crawl}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useRef } from 'react';\n\nimport classes from './AddMovie.module.css';\n\nfunction AddMovie(props) {\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value,\n    };\n\n    props.onAddMovie(movie);\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='title'>Title</label>\n        <input type='text' id='title' ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='opening-text'>Opening Text</label>\n        <textarea rows='5' id='opening-text' ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='date'>Release Date</label>\n        <input type='text' id='date' ref={releaseDateRef} />\n      </div>\n      <button>Add Movie</button>\n    </form>\n  );\n}\n\nexport default AddMovie;\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMovies = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      // const res = await fetch('http://swapi.dev/api/film/'); // wrong api just to imitate failure\n      // const res = await fetch('http://swapi.dev/api/films/');\n      const res = await fetch('https://react-http-714a7-default-rtdb.firebaseio.com/movies.json');\n      if (!res.ok) {\n        throw new Error('Something went wrong');\n      }\n      const data = await res.json();\n      const loadedMovies = [];\n      for(let key in data) {\n        loadedMovies.push({\n          episode_id: key,\n          title: data[key].title,\n          releaseDate: data[key].releaseDate,\n          opening_crawl: data[key].openingText\n        });\n      }\n      setMovies(loadedMovies);\n    } catch (err) {\n      setError(err.message);\n\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMovies();\n  }, [fetchMovies]);\n\n  async function addMovieHandler(movie) {\n    const res = await fetch('https://react-http-714a7-default-rtdb.firebaseio.com/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = res.json();\n    console.log(data);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler}></AddMovie>\n      </section>\n      <section>\n        <button onClick={fetchMovies}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length === 0 && !error && <p>No Movies to show.</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && <p>Loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__1-COB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__etWOL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__2U6AD\"};"],"sourceRoot":""}