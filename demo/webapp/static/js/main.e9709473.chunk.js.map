{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","selectedYear","onChange","event","onFilterChange","target","Card","classes","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","max","dataPoints","dp","dataPoint","ExpenseChart","chartDataPoints","expenses","getMonth","Expenses","useState","curYear","setCurYear","filteredExpenses","filter","toString","ExpenseForm","userInput","setUserInput","onSubmit","preventDefault","formData","Date","onSaveExpenseData","type","prevState","min","step","onClick","onReset","NewExpense","showForm","setShowForm","resetAddNewHandler","formContent","expenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e9709473.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const selectHandler = (event) => {\r\n    props.onFilterChange(event.target.value);\r\n  }\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selectedYear} onChange={selectHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate;","import './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\n\r\nconst ExpenseItem = (props) => {\r\n    return (\r\n        <li>\r\n            <Card className=\"expense-item\">\r\n                <ExpenseDate date={props.date} />\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">${props.amount}</div>\r\n                </div>\r\n            </Card>\r\n        </li>\r\n    )\r\n}\r\nexport default ExpenseItem;","import ExpenseItem from \"./ExpenseItem\";\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = props => {\r\n    if(props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>\r\n    }\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {props.items.map((expense) => (\r\n                <ExpenseItem\r\n                    key={expense.id}\r\n                    title={expense.title}\r\n                    date={expense.date}\r\n                    amount={expense.amount} />)\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ExpensesList;","import './ChartBar.css'\r\n\r\nconst ChartBar = props => {\r\n    let barFillHeight = '0%';\r\n    if(props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value/props.maxValue) * 100) + '%';\r\n    }\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height: barFillHeight}}>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">\r\n                {props.label}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar;","import ChartBar from './ChartBar';\r\nimport './Chart.css'\r\nconst Chart = props => {\r\n    const maxValue = Math.max(...props.dataPoints.map(dp => dp.value));\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(dataPoint => <ChartBar\r\n                key={dataPoint.label}\r\n                value={dataPoint.value}\r\n                maxValue={maxValue}\r\n                label={dataPoint.label} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart = props => {\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ]\r\n\r\n    for(const expense of props.expenses) {\r\n        const expMonth = expense.date.getMonth(); // this will give number 0 is jan\r\n        chartDataPoints[expMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />\r\n}\r\n\r\nexport default ExpenseChart;","import ExpensesFilter from \"./ExpensesFilter\";\r\nimport './Expenses.css';\r\nimport Card from \"../UI/Card\";\r\nimport { useState } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpenseChart from \"./ExpenseChart\";\r\n\r\nfunction Expenses(props) {\r\n    const [curYear, setCurYear] = useState(\"2020\");\r\n    const filterChangeHandler = (year) => {\r\n        setCurYear(year);\r\n    }\r\n    const filteredExpenses = props.expenses.filter(expense => {\r\n        return expense.date.getFullYear().toString() === curYear\r\n    })\r\n\r\n    return (\r\n\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter selectedYear={curYear} onFilterChange={filterChangeHandler} />\r\n            <ExpenseChart expenses={filteredExpenses} />\r\n            <ExpensesList items={filteredExpenses} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Expenses;","import {useState} from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    // const [enteredTitle, setEnteredTitle] = useState('');\r\n    // const [enteredAmount, setEnteredAmount] = useState('');\r\n    // const [enteredDate, setEnteredDate] = useState('');\r\n    const [userInput, setUserInput] = useState({\r\n        title: '',\r\n        amount: '',\r\n        date: ''\r\n    })\r\n\r\n    const titleChangeHandler = (event) => {\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredTitle: event.target.value\r\n        // });\r\n        // this is bcoz react schedules state update maybe someone has already updated but you worked on\r\n        // old state as it was not updated in userInput state yet\r\n        setUserInput((prevState) => {\r\n            return {\r\n                    ...prevState,\r\n                    title: event.target.value\r\n                }\r\n        })\r\n    }\r\n    const amountChangeHandler = (event) => {\r\n        setUserInput((prevState) => {\r\n            return {\r\n                    ...prevState,\r\n                    amount: +event.target.value\r\n                }\r\n        })\r\n    }\r\n    const dateChangeHandler = (event) => {\r\n        setUserInput((prevState) => {\r\n            return {\r\n                    ...prevState,\r\n                    date: event.target.value\r\n                }\r\n        })\r\n    }\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {\r\n            ...userInput,\r\n            date: new Date(userInput.date)\r\n        }\r\n        props.onSaveExpenseData(formData);\r\n        setUserInput({\r\n            title: '',\r\n            amount: '',\r\n            date: ''\r\n        })\r\n    }\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={userInput.title} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" value={userInput.amount} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" value={userInput.date} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button onClick={props.onReset}>Cancel</button>\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm;","import './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport { useState } from 'react';\r\n\r\nconst NewExpense = (props) => {\r\n    const [showForm, setShowForm] = useState(false);\r\n    const saveExpenseHandler = (expense) => {\r\n        const expenseData = {\r\n            ...expense,\r\n            id: Math.random().toString()\r\n        }\r\n        props.onAddExpense(expenseData);\r\n        resetAddNewHandler();\r\n    }\r\n    const addNewExpenseHandler = () => {\r\n        setShowForm(true);\r\n    }\r\n    const resetAddNewHandler = () => {\r\n        setShowForm(false);\r\n    }\r\n    let formContent = (\r\n        <button onClick={addNewExpenseHandler}>Add new expense</button>\r\n    )\r\n    if(showForm) {\r\n        formContent = (\r\n            <ExpenseForm onReset={resetAddNewHandler} onSaveExpenseData={saveExpenseHandler}/>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {formContent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewExpense;","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expenseData) => {\n    setExpenses((prevState) => {\n      return [expenseData, ...prevState];\n    })\n  }\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}